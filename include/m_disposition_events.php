<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_m_disposition  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["ProcessValuesAdd"]=true;

		$this->events["BeforeAdd"]=true;

		$this->events["BeforeProcessRowList"]=true;

		$this->events["AfterAdd"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Process record values
function ProcessValuesAdd(&$values, $pageObject)
{

		// Get Local Date Time
$tz = 'Asia/Jakarta';
$dt = new DateTime("now", new DateTimeZone($tz));
$timestamp = $dt->format('Y-m-d G:i:s');
$data = array();
$data["t_disposition_from"] = $userData = Security::getUserName();
DB::Insert("m_disposition", $data );
$_SESSION["t_booking_id"] = $values['t_disposition_no'];

// Place event code here.
// Use "Add Action" button to add code snippets.
;
} // function ProcessValuesAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record added
function BeforeAdd(&$values, &$message, $inline, $pageObject)
{

		$tz = 'Asia/Jakarta';
$dt = new DateTime("now", new DateTimeZone($tz));
$timestamp = $dt->format('Y-m-d G:i:s');
$values['t_disposition_from_date'] = $timestamp;
$values['t_disposition_to_date'] = $timestamp;

$values['t_disposition_type'] = 6;


// Place event code here.
// Use "Add Action" button to add code snippets.

return true;
;
} // function BeforeAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: Before record processed
function BeforeProcessRowList(&$data, $pageObject)
{

		$userData = Security::getUserName();
$idTicket = $data['t_disposition_no'];
$lastUser = $data['t_disposition_to'];
$pageObject->hideItem("delete");

if($userData == $lastUser){
	$pageObject->showItem("add");
}else{
	$pageObject->hideItem("add");
}

// Place event code here.
// Use "Add Action" button to add code snippets.

return true;
;
} // function BeforeProcessRowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record added
function AfterAdd(&$values, &$keys, $inline, $pageObject)
{

		$ticketId = $values['t_disposition_no'];
$disposisi = $values['t_disposition_status'];
$tglInput = $values['t_disposition_from_date'];
$idDispo = $values['t_disposition_id'];
$statusText = '';

switch ($disposisi) {
    case 29:
        $statusText = 'Draft';
        break;
    case 30:
        $statusText = 'Follow Up';
        break;
    case 31:
        $statusText = 'Approve';
        break;
    case 32:
        $statusText = 'Decline';
        break;
    case 33:
        $statusText = 'Cancelled';
        break;
    case 34:
        $statusText = 'Proceed';
        break;
    default:
        $statusText = 'Unknown Status';
        break;
}

$message = "You receive a disposition from " . $values["t_disposition_from"];
$title = "[T-Booking] " . $statusText . " Booking Notification";
$icon = "fa-envelope";
$url = "t_booking_view_edit.php?editid1=" . $ticketId;
$expire = 1440;
$permissions = $values["t_disposition_to"];
$newWindow = false;

// Send notif
addNotification($message, $title, $icon, $url, $expire, $permissions, $newWindow);

// Send email
$email = $values['t_disposition_to'] . "@talisman.co.id"; 
$from = "no-reply@talisman.co.id";
$msg = "Dear " . $values["t_disposition_to"] . ",\n\n" .
       "You have received a disposition from Booking Application with the following details:\n\n" .
       "Disposition Status: " . $statusText . "\n" .
       "Disposition Date: " . $tglInput . "\n\n" .
       $values['t_disposition_desc'] . "\n\n" .
       "Thank you,\n" .
$subject = "[T-Booking] Disposition Notification";

$ret = runner_mail(array('to' => $email, 'cc' => $cc, 'subject' => $subject, 'body' => $msg, 'from' => $from));
if (!$ret["mailed"]) {
    echo $ret["message"];
}

;
} // function AfterAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>